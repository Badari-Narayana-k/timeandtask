{"ast":null,"code":"var _jsxFileName = \"D:\\\\3-2\\\\crs\\\\app\\\\src\\\\CountdownTimer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './CountdownTimer.css'; // Importing CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CountdownTimer() {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(60000); // 60 seconds\n  const [isRunning, setIsRunning] = useState(false);\n  const intervalRef = useRef();\n  const startTimer = () => {\n    setIsRunning(true);\n    intervalRef.current = setInterval(() => {\n      setTimeLeft(prevTimeLeft => {\n        if (prevTimeLeft <= 0) {\n          clearInterval(intervalRef.current);\n          setIsRunning(false);\n          return 0;\n        }\n        return prevTimeLeft - 10;\n      });\n    }, 10);\n  };\n  const stopTimer = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n  };\n  const resetTimer = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n    setTimeLeft(60000); // Reset to 60 seconds\n  };\n  const formatTime = time => {\n    const seconds = Math.floor(time % 60000 / 1000);\n    const milliseconds = Math.floor(time % 1000 / 10);\n    return `${seconds.toString().padStart(2, '0')}.${milliseconds.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Countdown Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-display\",\n      children: formatTime(timeLeft)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [!isRunning ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startTimer,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopTimer,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTimer,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(CountdownTimer, \"G/dP2Wwig55WqH65YR2PwXZQCTA=\");\n_c = CountdownTimer;\nexport default CountdownTimer;\nvar _c;\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","CountdownTimer","_s","timeLeft","setTimeLeft","isRunning","setIsRunning","intervalRef","startTimer","current","setInterval","prevTimeLeft","clearInterval","stopTimer","resetTimer","formatTime","time","seconds","Math","floor","milliseconds","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/3-2/crs/app/src/CountdownTimer.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './CountdownTimer.css'; // Importing CSS file for styling\r\n\r\nfunction CountdownTimer() {\r\n  const [timeLeft, setTimeLeft] = useState(60000); // 60 seconds\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const intervalRef = useRef();\r\n\r\n  const startTimer = () => {\r\n    setIsRunning(true);\r\n    intervalRef.current = setInterval(() => {\r\n      setTimeLeft((prevTimeLeft) => {\r\n        if (prevTimeLeft <= 0) {\r\n          clearInterval(intervalRef.current);\r\n          setIsRunning(false);\r\n          return 0;\r\n        }\r\n        return prevTimeLeft - 10;\r\n      });\r\n    }, 10);\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    clearInterval(intervalRef.current);\r\n    setIsRunning(false);\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    clearInterval(intervalRef.current);\r\n    setIsRunning(false);\r\n    setTimeLeft(60000); // Reset to 60 seconds\r\n  };\r\n\r\n  const formatTime = (time) => {\r\n    const seconds = Math.floor((time % 60000) / 1000);\r\n    const milliseconds = Math.floor((time % 1000) / 10);\r\n    return `${seconds.toString().padStart(2, '0')}.${milliseconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"timer-container\">\r\n      <h1>Countdown Timer</h1>\r\n      <div className=\"timer-display\">{formatTime(timeLeft)}</div>\r\n      <div className=\"button-container\">\r\n        {!isRunning ? (\r\n          <button onClick={startTimer}>Start</button>\r\n        ) : (\r\n          <button onClick={stopTimer}>Stop</button>\r\n        )}\r\n        <button onClick={resetTimer}>Reset</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountdownTimer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}