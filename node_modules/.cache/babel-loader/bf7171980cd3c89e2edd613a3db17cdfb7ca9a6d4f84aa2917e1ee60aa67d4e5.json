{"ast":null,"code":"var _jsxFileName = \"D:\\\\3-2\\\\crs\\\\app\\\\src\\\\CountdownTimer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './CountdownTimer.css'; // Importing CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CountdownTimer() {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(); // 15 minutes in milliseconds\n  const [isRunning, setIsRunning] = useState(false);\n  const intervalRef = useRef();\n  useEffect(() => {\n    // Disable notifications when the component mounts\n    Notification.requestPermission();\n    return () => {\n      // Re-enable notifications when the component unmounts\n      Notification.requestPermission();\n    };\n  }, []);\n  const startTimer = () => {\n    setIsRunning(true);\n    intervalRef.current = setInterval(() => {\n      setTimeLeft(prevTimeLeft => {\n        if (prevTimeLeft <= 0) {\n          clearInterval(intervalRef.current);\n          setIsRunning(false);\n          showNotification(); // Show notification when timer completes\n          return 0;\n        }\n        return prevTimeLeft - 10;\n      });\n    }, 10);\n  };\n  const stopTimer = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n  };\n  const resetTimer = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n    setTimeLeft(900000); // Reset to 15 minutes\n  };\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60000);\n    const seconds = Math.floor(time % 60000 / 1000);\n    const milliseconds = Math.floor(time % 1000 / 10);\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}.${milliseconds.toString().padStart(2, '0')}`;\n  };\n  const showNotification = () => {\n    if (Notification.permission === 'granted') {\n      new Notification('Congratulations!', {\n        body: 'You have completed your focus session!'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Focus Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-display\",\n      children: formatTime(timeLeft)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [!isRunning ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startTimer,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopTimer,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTimer,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(CountdownTimer, \"9pAQ3L33Y5YRWqjX8APnQKBiKA4=\");\n_c = CountdownTimer;\nexport default CountdownTimer;\nvar _c;\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","CountdownTimer","_s","timeLeft","setTimeLeft","isRunning","setIsRunning","intervalRef","Notification","requestPermission","startTimer","current","setInterval","prevTimeLeft","clearInterval","showNotification","stopTimer","resetTimer","formatTime","time","minutes","Math","floor","seconds","milliseconds","toString","padStart","permission","body","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/3-2/crs/app/src/CountdownTimer.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './CountdownTimer.css'; // Importing CSS file for styling\r\n\r\nfunction CountdownTimer() {\r\n  const [timeLeft, setTimeLeft] = useState(); // 15 minutes in milliseconds\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const intervalRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // Disable notifications when the component mounts\r\n    Notification.requestPermission();\r\n    return () => {\r\n      // Re-enable notifications when the component unmounts\r\n      Notification.requestPermission();\r\n    };\r\n  }, []);\r\n\r\n  const startTimer = () => {\r\n    setIsRunning(true);\r\n    intervalRef.current = setInterval(() => {\r\n      setTimeLeft((prevTimeLeft) => {\r\n        if (prevTimeLeft <= 0) {\r\n          clearInterval(intervalRef.current);\r\n          setIsRunning(false);\r\n          showNotification(); // Show notification when timer completes\r\n          return 0;\r\n        }\r\n        return prevTimeLeft - 10;\r\n      });\r\n    }, 10);\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    clearInterval(intervalRef.current);\r\n    setIsRunning(false);\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    clearInterval(intervalRef.current);\r\n    setIsRunning(false);\r\n    setTimeLeft(900000); // Reset to 15 minutes\r\n  };\r\n\r\n  const formatTime = (time) => {\r\n    const minutes = Math.floor(time / 60000);\r\n    const seconds = Math.floor((time % 60000) / 1000);\r\n    const milliseconds = Math.floor((time % 1000) / 10);\r\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}.${milliseconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const showNotification = () => {\r\n    if (Notification.permission === 'granted') {\r\n      new Notification('Congratulations!', {\r\n        body: 'You have completed your focus session!',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"timer-container\">\r\n      <h1>Focus Mode</h1>\r\n      <div className=\"timer-display\">{formatTime(timeLeft)}</div>\r\n      <div className=\"button-container\">\r\n        {!isRunning ? (\r\n          <button onClick={startTimer}>Start</button>\r\n        ) : (\r\n          <button onClick={stopTimer}>Stop</button>\r\n        )}\r\n        <button onClick={resetTimer}>Reset</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountdownTimer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}