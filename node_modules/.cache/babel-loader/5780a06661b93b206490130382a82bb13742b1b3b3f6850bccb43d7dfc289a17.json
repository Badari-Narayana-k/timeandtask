{"ast":null,"code":"var _jsxFileName = \"D:\\\\3-2\\\\crs\\\\timeandtask\\\\src\\\\CountdownTimer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './CountdownTimer.css'; // Importing CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CountdownTimer() {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(900000); // 15 minutes in milliseconds\n  const [isRunning, setIsRunning] = useState(false);\n  const intervalRef = useRef();\n  const notificationRef = useRef(null);\n  useEffect(() => {\n    // Request notification permission on component mount\n    if (Notification.permission !== 'granted') {\n      Notification.requestPermission().then(permission => {\n        if (permission === 'granted') {\n          notificationRef.current = true;\n        }\n      });\n    } else {\n      notificationRef.current = true;\n    }\n    return () => {\n      // Clear interval and reset notification permission on component unmount\n      clearInterval(intervalRef.current);\n      notificationRef.current = false;\n      Notification.requestPermission();\n    };\n  }, []);\n  const startTimer = () => {\n    setIsRunning(true);\n    intervalRef.current = setInterval(() => {\n      setTimeLeft(prevTimeLeft => {\n        if (prevTimeLeft <= 0) {\n          clearInterval(intervalRef.current);\n          setIsRunning(false);\n          if (notificationRef.current) {\n            showNotification();\n          }\n          alert('Congratulations on completing focus session!');\n          return 0;\n        }\n        return prevTimeLeft - 10;\n      });\n    }, 10);\n  };\n  const stopTimer = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n  };\n  const resetTimer = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n    setTimeLeft(900000); // Reset to 15 minutes\n  };\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60000);\n    const seconds = Math.floor(time % 60000 / 1000);\n    const milliseconds = Math.floor(time % 1000 / 10);\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}.${milliseconds.toString().padStart(2, '0')}`;\n  };\n  const showNotification = () => {\n    new Notification('Congratulations!', {\n      body: 'You have completed your focus session!'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Focus Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-display\",\n      children: formatTime(timeLeft)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [!isRunning ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startTimer,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopTimer,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTimer,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(CountdownTimer, \"sIbibbzaZFLvJdbDTy3HaHu/wJM=\");\n_c = CountdownTimer;\nexport default CountdownTimer;\nvar _c;\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","CountdownTimer","_s","timeLeft","setTimeLeft","isRunning","setIsRunning","intervalRef","notificationRef","Notification","permission","requestPermission","then","current","clearInterval","startTimer","setInterval","prevTimeLeft","showNotification","alert","stopTimer","resetTimer","formatTime","time","minutes","Math","floor","seconds","milliseconds","toString","padStart","body","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/3-2/crs/timeandtask/src/CountdownTimer.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './CountdownTimer.css'; // Importing CSS file for styling\r\n\r\nfunction CountdownTimer() {\r\n  const [timeLeft, setTimeLeft] = useState(900000); // 15 minutes in milliseconds\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const intervalRef = useRef();\r\n  const notificationRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Request notification permission on component mount\r\n    if (Notification.permission !== 'granted') {\r\n      Notification.requestPermission().then(permission => {\r\n        if (permission === 'granted') {\r\n          notificationRef.current = true;\r\n        }\r\n      });\r\n    } else {\r\n      notificationRef.current = true;\r\n    }\r\n\r\n    return () => {\r\n      // Clear interval and reset notification permission on component unmount\r\n      clearInterval(intervalRef.current);\r\n      notificationRef.current = false;\r\n      Notification.requestPermission();\r\n    };\r\n  }, []);\r\n\r\n  const startTimer = () => {\r\n    setIsRunning(true);\r\n    intervalRef.current = setInterval(() => {\r\n      setTimeLeft(prevTimeLeft => {\r\n        if (prevTimeLeft <= 0) {\r\n          clearInterval(intervalRef.current);\r\n          setIsRunning(false);\r\n          if (notificationRef.current) {\r\n            showNotification();\r\n          }\r\n          alert('Congratulations on completing focus session!');\r\n          return 0;\r\n        }\r\n        return prevTimeLeft - 10;\r\n      });\r\n    }, 10);\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    clearInterval(intervalRef.current);\r\n    setIsRunning(false);\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    clearInterval(intervalRef.current);\r\n    setIsRunning(false);\r\n    setTimeLeft(900000); // Reset to 15 minutes\r\n  };\r\n\r\n  const formatTime = time => {\r\n    const minutes = Math.floor(time / 60000);\r\n    const seconds = Math.floor((time % 60000) / 1000);\r\n    const milliseconds = Math.floor((time % 1000) / 10);\r\n    return `${minutes.toString().padStart(2, '0')}:${seconds\r\n      .toString()\r\n      .padStart(2, '0')}.${milliseconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const showNotification = () => {\r\n    new Notification('Congratulations!', {\r\n      body: 'You have completed your focus session!'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"timer-container\">\r\n      <h1>Focus Mode</h1>\r\n      <div className=\"timer-display\">{formatTime(timeLeft)}</div>\r\n      <div className=\"button-container\">\r\n        {!isRunning ? (\r\n          <button onClick={startTimer}>Start</button>\r\n        ) : (\r\n          <button onClick={stopTimer}>Stop</button>\r\n        )}\r\n        <button onClick={resetTimer}>Reset</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountdownTimer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}